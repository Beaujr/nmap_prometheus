FROM golang:1.13.3-alpine3.10 as builder
ARG APP_NAME
RUN apk update && apk add curl make git gcc cmake g++ ca-certificates
RUN mkdir -p /go/src/github.com/beaujr/${APP_NAME}

ENV GOPATH=/go

WORKDIR /go/src/github.com/beaujr/${APP_NAME}

COPY . .

ARG GOOS
ARG GOARCH
ARG APP_TYPE
RUN make build GOOS=${GOOS} GOARCH=${GOARCH} APP_TYPE=${APP_TYPE}

RUN mv bin/beaujr/${APP_NAME}-${APP_TYPE}-${GOOS}_${GOARCH} bin/beaujr/${APP_NAME}

# https://hub.docker.com/_/alpine
FROM alpine@sha256:c929c5ca1d3f793bfdd2c6d6d9210e2530f1184c0f488f514f1bb8080bb1e82b


# Install dependencies
RUN apk add --update --no-cache \
            ca-certificates \
            libpcap \
            libgcc libstdc++ \
            libressl3.1-libcrypto libressl3.1-libssl \
 && update-ca-certificates \
 && rm -rf /var/cache/apk/*


# Compile and install Nmap from sources
RUN apk add --update --no-cache --virtual .build-deps \
        libpcap-dev libressl-dev lua-dev linux-headers \
        autoconf g++ libtool make \
        curl \

 && curl -fL -o /tmp/nmap.tar.bz2 \
         https://nmap.org/dist/nmap-7.80.tar.bz2 \
 && tar -xjf /tmp/nmap.tar.bz2 -C /tmp \
 && cd /tmp/nmap* \
 && ./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --mandir=/usr/share/man \
        --infodir=/usr/share/info \
        --without-zenmap \
        --without-nmap-update \
        --with-openssl=/usr/lib \
        --with-liblua=/usr/include \
 && make \
 && make install \

 && apk del .build-deps \
 && rm -rf /var/cache/apk/* \
           /tmp/nmap*
ARG APP_NAME
WORKDIR /
COPY --from=builder /go/src/github.com/beaujr/${APP_NAME}/bin/beaujr/${APP_NAME} app
COPY --from=builder /etc/ssl/certs/ /etc/ssl/certs/
ENTRYPOINT ["./app"]
ARG VCS_REF
LABEL org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/beaujr/${APP_NAME}" \
      org.label-schema.license="Apache-2.0"