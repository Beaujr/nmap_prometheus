syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = "proto";

package proto;

// The greeting service definition.
service HomeDetector {
  // Sends a greeting
  rpc Ack (StringRequest) returns (Reply) {}
  rpc Address (AddressRequest) returns (Reply) {}
  rpc Addresses (AddressesRequest) returns (Reply) {}
  rpc ListTimedCommands (google.protobuf.Empty) returns (TCsResponse) {}
  rpc ListPeople (google.protobuf.Empty) returns (People) {}
  rpc ListCommandQueue (google.protobuf.Empty) returns (CQsResponse) {}
  rpc ListDevices (google.protobuf.Empty) returns (DevicesResponse) {}
  rpc UpdateDevice (Devices) returns (Reply) {}
  rpc DeleteDevice (StringRequest) returns (Reply) {}
  rpc DeleteCommandQueue (StringRequest) returns (Reply) {}
  rpc DeleteTimedCommand (StringRequest) returns (Reply) {}
  rpc CompleteTimedCommands (StringRequest) returns (Reply) {}
  rpc CompleteTimedCommand (StringRequest) returns (Reply) {}
  rpc CreateTimedCommand (TimedCommands) returns (Reply) {}
}

// The request message containing the user's name.
message StringRequest {
  string key = 1;
}

// The request message containing the user's name.
message TimedCommands {
  string id = 1;
  int64 executeat = 2;
  string owner = 3;
  string command = 4;
  bool executed = 5;
}

message ServerConfig {
	int64 timeAwaySeconds = 1;
	int64 bleTimeAwaySeconds = 2;
	bool newDeviceIsPerson = 3;
}

message Person {
	repeated string ids = 1;
    string name = 2;
}

message People {
    repeated Person people = 1;
}

// The request message containing the user's name.
message CQsResponse {
  repeated TimedCommands cqs = 1;
}

message TCsResponse {
  repeated BleDevices bles = 1;
}

message DevicesResponse {
  repeated Devices devices = 1;
}

message BleDevices {
	string Id = 1;
	int64 LastSeen = 2;
	repeated Commands commands = 3;
	string Name = 4;
	string Home = 5;
}

message Commands {
	int64 Timeout  = 1;
	string Command  = 2;
	string Id = 3;
}

// The request message containing the user's name.
message AddressRequest {
  string ip = 1;
  string mac = 2;
}

message AddressesRequest {
  repeated AddressRequest addresses = 1;
}

// The response message containing the greetings
message Reply {
  bool acknowledged = 1;
}


message Devices {
	networkId   Id = 1;
	string  Home = 2;
	int64 LastSeen = 3;
	bool Away = 4;
	string Name = 5;
	bool Person= 6;
	string Command = 7;
	bool Smart = 8;
	string Manufacturer = 9;
	bool PresenceAware = 10;
}

message networkId {
	string Ip    = 1;
	string Mac   = 2;
	string UUID  = 3;
}