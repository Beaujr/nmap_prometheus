// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/DeviceDetector.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type BleRequest struct {
	Mac                  string   `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BleRequest) Reset()         { *m = BleRequest{} }
func (m *BleRequest) String() string { return proto.CompactTextString(m) }
func (*BleRequest) ProtoMessage()    {}
func (*BleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd5c17779676ab01, []int{0}
}

func (m *BleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BleRequest.Unmarshal(m, b)
}
func (m *BleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BleRequest.Marshal(b, m, deterministic)
}
func (m *BleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BleRequest.Merge(m, src)
}
func (m *BleRequest) XXX_Size() int {
	return xxx_messageInfo_BleRequest.Size(m)
}
func (m *BleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BleRequest proto.InternalMessageInfo

func (m *BleRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

// The request message containing the user's name.
type AddressRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mac                  string   `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressRequest) Reset()         { *m = AddressRequest{} }
func (m *AddressRequest) String() string { return proto.CompactTextString(m) }
func (*AddressRequest) ProtoMessage()    {}
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd5c17779676ab01, []int{1}
}

func (m *AddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressRequest.Unmarshal(m, b)
}
func (m *AddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressRequest.Marshal(b, m, deterministic)
}
func (m *AddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressRequest.Merge(m, src)
}
func (m *AddressRequest) XXX_Size() int {
	return xxx_messageInfo_AddressRequest.Size(m)
}
func (m *AddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddressRequest proto.InternalMessageInfo

func (m *AddressRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *AddressRequest) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

// The response message containing the greetings
type Reply struct {
	Acknowledged         bool     `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd5c17779676ab01, []int{2}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetAcknowledged() bool {
	if m != nil {
		return m.Acknowledged
	}
	return false
}

func init() {
	proto.RegisterType((*BleRequest)(nil), "proto.BleRequest")
	proto.RegisterType((*AddressRequest)(nil), "proto.AddressRequest")
	proto.RegisterType((*Reply)(nil), "proto.Reply")
}

func init() {
	proto.RegisterFile("proto/DeviceDetector.proto", fileDescriptor_fd5c17779676ab01)
}

var fileDescriptor_fd5c17779676ab01 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x77, 0x49, 0x2d, 0xcb, 0x4c, 0x4e, 0x75, 0x49, 0x2d, 0x49, 0x4d, 0x2e, 0xc9, 0x2f,
	0xd2, 0x03, 0x0b, 0x0a, 0xb1, 0x82, 0x29, 0x25, 0x39, 0x2e, 0x2e, 0xa7, 0x9c, 0xd4, 0xa0, 0xd4,
	0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xdc, 0xc4, 0x64, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x10, 0x53, 0xc9, 0x88, 0x8b, 0xcf, 0x31, 0x25, 0xa5, 0x28, 0xb5, 0xb8, 0x18,
	0xa6, 0x86, 0x8f, 0x8b, 0x29, 0xb3, 0x00, 0xaa, 0x84, 0x29, 0xb3, 0x00, 0xa6, 0x87, 0x09, 0xa1,
	0x47, 0x9b, 0x8b, 0x35, 0x28, 0xb5, 0x20, 0xa7, 0x52, 0x48, 0x89, 0x8b, 0x27, 0x31, 0x39, 0x3b,
	0x2f, 0xbf, 0x3c, 0x27, 0x35, 0x25, 0x3d, 0x35, 0x05, 0xac, 0x89, 0x23, 0x08, 0x45, 0xcc, 0x28,
	0x8b, 0x8b, 0xc7, 0x23, 0x3f, 0x17, 0xee, 0x3a, 0x21, 0x0d, 0x2e, 0x66, 0xc7, 0xe4, 0x6c, 0x21,
	0x41, 0x88, 0x33, 0xf5, 0x10, 0x8e, 0x93, 0xe2, 0x81, 0x0a, 0x81, 0xcd, 0x56, 0x62, 0x10, 0x32,
	0xe0, 0x62, 0x87, 0x3a, 0x4d, 0x48, 0x14, 0x2a, 0x85, 0xea, 0x54, 0x74, 0x1d, 0x4e, 0xec, 0x51,
	0x10, 0x5f, 0x27, 0xb1, 0x81, 0x29, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0xf1, 0x8b,
	0x16, 0x21, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HomeDetectorClient is the client API for HomeDetector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HomeDetectorClient interface {
	// Sends a greeting
	Ack(ctx context.Context, in *BleRequest, opts ...grpc.CallOption) (*Reply, error)
	Address(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*Reply, error)
}

type homeDetectorClient struct {
	cc grpc.ClientConnInterface
}

func NewHomeDetectorClient(cc grpc.ClientConnInterface) HomeDetectorClient {
	return &homeDetectorClient{cc}
}

func (c *homeDetectorClient) Ack(ctx context.Context, in *BleRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.HomeDetector/Ack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *homeDetectorClient) Address(ctx context.Context, in *AddressRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.HomeDetector/Address", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HomeDetectorServer is the server API for HomeDetector service.
type HomeDetectorServer interface {
	// Sends a greeting
	Ack(context.Context, *BleRequest) (*Reply, error)
	Address(context.Context, *AddressRequest) (*Reply, error)
}

// UnimplementedHomeDetectorServer can be embedded to have forward compatible implementations.
type UnimplementedHomeDetectorServer struct {
}

func (*UnimplementedHomeDetectorServer) Ack(ctx context.Context, req *BleRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ack not implemented")
}
func (*UnimplementedHomeDetectorServer) Address(ctx context.Context, req *AddressRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Address not implemented")
}

func RegisterHomeDetectorServer(s *grpc.Server, srv HomeDetectorServer) {
	s.RegisterService(&_HomeDetector_serviceDesc, srv)
}

func _HomeDetector_Ack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeDetectorServer).Ack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HomeDetector/Ack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeDetectorServer).Ack(ctx, req.(*BleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HomeDetector_Address_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HomeDetectorServer).Address(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HomeDetector/Address",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HomeDetectorServer).Address(ctx, req.(*AddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HomeDetector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HomeDetector",
	HandlerType: (*HomeDetectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ack",
			Handler:    _HomeDetector_Ack_Handler,
		},
		{
			MethodName: "Address",
			Handler:    _HomeDetector_Address_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/DeviceDetector.proto",
}
