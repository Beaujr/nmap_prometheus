name: Master Build

on:
  push:
    branches:
    - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.x
      - name: Build Binaries
        run: |
          make build GOARCH=amd64 GOOS=linux && mv bin/beaujr/nmap_prometheus-client bin/beaujr/nmap_prometheus-client_amd64
          make build GOARCH=arm64 GOOS=linux && mv bin/beaujr/nmap_prometheus-client bin/beaujr/nmap_prometheus-client_arm64
          make build GOARCH=arm GOOS=linux && mv bin/beaujr/nmap_prometheus-client bin/beaujr/nmap_prometheus-client_arm
          make build GOARCH=arm64 GOOS=darwin && mv bin/beaujr/nmap_prometheus-client bin/beaujr/nmap_prometheus-client_darwin_arm64
          make build GOARCH=amd64 GOOS=darwin && mv bin/beaujr/nmap_prometheus-client bin/beaujr/nmap_prometheus-client_darwin_amd64
          make build GOARCH=amd64 APP_TYPE=server GOOS=linux && mv bin/beaujr/nmap_prometheus-server bin/beaujr/nmap_prometheus-server_amd64
          make build GOARCH=arm64 APP_TYPE=server GOOS=linux && mv bin/beaujr/nmap_prometheus-server bin/beaujr/nmap_prometheus-server_arm64
          make build GOARCH=arm APP_TYPE=server GOOS=linux && mv bin/beaujr/nmap_prometheus-server bin/beaujr/nmap_prometheus-server_arm
      - name: Declare Release Variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/beaujr/nmap_prometheus-*
          file_glob: true
          asset_name: Latest
          tag: "${{ steps.vars.outputs.branch }}_${{ steps.vars.outputs.sha_short }}"
          overwrite: true
          body: "Master Release ${{ steps.vars.outputs.sha_short }}"
      - name: Docker Login
        run: make docker-login DOCKER_USER=beaujr DOCKER_PASS=${{ secrets.DOCKER_PASS }}
      - name: Build the Client Docker image
        run: make docker_build APP_TYPE=client DOCKERFILE=Dockerfile.client BUILD_TAG=client
      - name: Build the Server Docker image
        run: make docker_build APP_TYPE=server BUILD_TAG=server
